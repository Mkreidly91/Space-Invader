/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Cinnamine3D (https://sketchfab.com/LordCinn)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/pixel-plane-da5c802719844a86b9464f73c633cdd1
title: PIXEL PLANE
*/

import React, { useEffect, useRef } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

export default function Fighter(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF('/3dModels/pixel_plane.glb');
  const { actions, ref: planeRef } = useAnimations(animations, group);

  useEffect(() => {
    actions['ArmatureAction.001'].play();

    document.addEventListener('keydown', (event) => {
      if (group.current) {
        console.log(event);
        const { key } = event;
        if (key === 'd') {
          group.current.rotation.y = 0.2;
          group.current.position.x += 2;
        }
        if (key === 'a') {
          group.current.rotation.y = -0.2;
          group.current.position.x -= 2;
        }
        if (key === 'w') {
          group.current.position.z -= 20;
        }
        if (key === 's') {
          group.current.position.z += 20;
        }
      }
    });

    document.addEventListener('keyup', (event) => {
      const { key } = event;
      if (key === 'd') {
        group.current.rotation.y = 0;
      }
      if (key === 'a') {
        group.current.rotation.y = 0;
      }
    });
  });

  // useFrame(({ clock }) => {
  //   group.current.rotation.x += clock.getElapsedTime();
  // });
  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      scale={5}
      rotation={[-Math.PI / 2, 0, 0]}
    >
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model">
          <group
            name="851ef2b194494e539ad187404fbe584bfbx"
            rotation={[Math.PI / 2, 0, 0]}
          >
            <group name="Object_2">
              <group name="RootNode">
                <group
                  name="Armature"
                  rotation={[-Math.PI / 2, 0, 0]}
                  // scale={100}
                >
                  <group name="Object_6">
                    <primitive object={nodes._rootJoint} />
                    <group
                      name="Object_8"
                      rotation={[-Math.PI / 2, 0, 0]}
                      // scale={100}
                    />
                    <skinnedMesh
                      name="Object_9"
                      geometry={nodes.Object_9.geometry}
                      material={materials['Material.026']}
                      skeleton={nodes.Object_9.skeleton}
                    />
                  </group>
                </group>
                <group
                  name="Cube000"
                  rotation={[-Math.PI / 2, 0, 0]}
                  // scale={100}
                />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/3dModels/pixel_plane.glb');
